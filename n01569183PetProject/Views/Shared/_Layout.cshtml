<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Mafia</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Mafia", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("Teams", "List", "Team")</li>
                    <li>@Html.ActionLink("Roles", "List", "Role")</li>
                    <li>@Html.ActionLink("Players", "List", "Player")</li>
                    <li>@Html.ActionLink("Game", "Index", "Game")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Shavin Singh</p>
        </footer>
    </div>

    <div id="PopupBox" class="popup hidden">
        <p>Popup Box</p>
    </div>



    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
<script>
        function gid(id) {
            return document.getElementById(id);
        }

        async function api(endpoint, callback = () => { }) {
            var url = location.origin + "/api/" + endpoint;
            var xhr = new XMLHttpRequest();
            xhr.open("get", url, true);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        callback(JSON.parse(xhr.response));
                    }
                    else callback(null);;
                }

            }
            xhr.send(null);
        }

        async function apip(endpoint, payload, callback = () => { }) {
            var url = location.origin + "/api/" + endpoint;
            var xhr = new XMLHttpRequest();

            xhr.open("post", url, true);

            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        var response;
                        try {
                            response = JSON.parse(xhr.response);
                        } catch {
                            response = null;
                        }
                        callback(response);
                    }
                    else callback(null);;
                }

            }
            xhr.send(JSON.stringify(payload));
        }

        function popup(url) {
        var xhr = new XMLHttpRequest();
        xhr.open('get',url,true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
                display('PopupBox', xhr.response);
            }
        }
        xhr.send(null);
    }

        function display(id, content) {
            document.getElementById(id).innerHTML = content;
            document.getElementById(id).classList.remove('hidden');
        }

        function cancelPopup() {
            document.getElementById("PopupBox").classList.add('hidden');
        }
</script>
</body>
</html>
